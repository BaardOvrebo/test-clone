{"events":[],"versions":[{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":""},{"name":"product_name","type":"varchar","tip":""},{"name":"price","type":"nvarchar","tip":""},{"name":"payment_type","type":"nvarchar","tip":""},{"name":"customer_name","type":"nvarchar","tip":""},{"name":"customer_city","type":"nvarchar","tip":""},{"name":"customer_state","type":"nvarchar","tip":""},{"name":"customer_country","type":"nvarchar","tip":""},{"name":"purchase_date","type":"datetime","tip":""},{"name":"record_date","type":"datetime","tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":7,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":1,"x":149.272705078125,"y":239.27259826660156,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":892.9089965820312,"y":129.45460510253906,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":255,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":3,"x":651.5452880859375,"y":61.181800842285156,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Generated value","inputs":[],"outputs":[{"index":30,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}},{"processId":5,"x":409.9090881347656,"y":117.72730255126953,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert data","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"},{"process_source":"3","process_destination":"2","port_source":"30","port_destination":"21","connection_class":"c-19","portRaw":"21:30","processRaw":"3:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-14T15:55:27.067Z"},{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":""},{"name":"product_name","type":"varchar","tip":""},{"name":"price","type":"nvarchar","tip":""},{"name":"payment_type","type":"nvarchar","tip":""},{"name":"customer_name","type":"nvarchar","tip":""},{"name":"customer_city","type":"nvarchar","tip":""},{"name":"customer_state","type":"nvarchar","tip":""},{"name":"customer_country","type":"nvarchar","tip":""},{"name":"purchase_date","type":"datetime","tip":""},{"name":"record_date","type":"datetime","tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":8,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":1,"x":11.89900016784668,"y":187.7574005126953,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":982.8079223632812,"y":46.62630081176758,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":255,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":3,"x":634.3737182617188,"y":-18.616199493408203,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Generated value","inputs":[],"outputs":[{"index":30,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}},{"processId":5,"x":426.0707092285156,"y":555.10107421875,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert data","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"},{"process_source":"3","process_destination":"2","port_source":"30","port_destination":"21","connection_class":"c-19","portRaw":"21:30","processRaw":"3:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-14T16:05:50.904Z"},{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":9,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":5,"x":426.0707092285156,"y":555.10107421875,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":1,"x":73.71720123291016,"y":177.7574005126953,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":1160.9896240234375,"y":108.44450378417969,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":280,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"},{"index":30,"title":"record_date","description":"Name: record_date, Required: false,  Requires data: false, Type: datetime, Description: ","translateTop":0,"transform":"translate(0, 250)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":6,"x":656.4545288085938,"y":672.1818237304688,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Get datetime","inputs":[],"outputs":[{"index":60,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"getdate()"}},{"processId":7,"x":890.9089965820312,"y":588.3637084960938,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":71,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":72,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":8,"x":699.54541015625,"y":115.81819915771484,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Create GUID","inputs":[],"outputs":[{"index":80,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}}],"connectionStrings":[{"process_source":"6","process_destination":"7","port_source":"60","port_destination":"70","connection_class":"c-14","portRaw":"70:60","processRaw":"6:7"},{"process_source":"7","process_destination":"2","port_source":"71","port_destination":"30","connection_class":"c-14","portRaw":"30:71","processRaw":"7:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"},{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"8","process_destination":"2","port_source":"80","port_destination":"21","connection_class":"c-19","portRaw":"21:80","processRaw":"8:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-14T16:16:22.795Z"},{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":10,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":5,"x":529.7070922851562,"y":416.01019287109375,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":1,"x":40.08089828491211,"y":78.66649627685547,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":1160.9896240234375,"y":108.44450378417969,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":280,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"},{"index":30,"title":"record_date","description":"Name: record_date, Required: false,  Requires data: false, Type: datetime, Description: ","translateTop":0,"transform":"translate(0, 250)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":6,"x":678.2725830078125,"y":566.7271728515625,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Get datetime","inputs":[],"outputs":[{"index":60,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"getdate()"}},{"processId":7,"x":895.4544067382812,"y":520.181884765625,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":71,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":72,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":8,"x":837.7271118164062,"y":54,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Create GUID","inputs":[],"outputs":[{"index":80,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}}],"connectionStrings":[{"process_source":"6","process_destination":"7","port_source":"60","port_destination":"70","connection_class":"c-14","portRaw":"70:60","processRaw":"6:7"},{"process_source":"7","process_destination":"2","port_source":"71","port_destination":"30","connection_class":"c-14","portRaw":"30:71","processRaw":"7:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"},{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"8","process_destination":"2","port_source":"80","port_destination":"21","connection_class":"c-19","portRaw":"21:80","processRaw":"8:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-14T21:06:08.992Z"},{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":13,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":5,"x":516.0706787109375,"y":396.919189453125,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":1,"x":240.98989868164062,"y":115.93920135498047,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":1160.9896240234375,"y":108.44450378417969,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":280,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"},{"index":30,"title":"record_date","description":"Name: record_date, Required: false,  Requires data: false, Type: datetime, Description: ","translateTop":0,"transform":"translate(0, 250)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":6,"x":681.9088134765625,"y":656.7271728515625,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Get datetime","inputs":[],"outputs":[{"index":60,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"getdate()"}},{"processId":7,"x":949.9998779296875,"y":629.2728271484375,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":71,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":72,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":8,"x":837.7271118164062,"y":54,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Create GUID","inputs":[],"outputs":[{"index":80,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}},{"processId":9,"x":1205.0909423828125,"y":656.6362915039062,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":90,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":10,"x":789.0908813476562,"y":500,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":100,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}}],"connectionStrings":[{"process_source":"6","process_destination":"7","port_source":"60","port_destination":"70","connection_class":"c-14","portRaw":"70:60","processRaw":"6:7"},{"process_source":"7","process_destination":"2","port_source":"71","port_destination":"30","connection_class":"c-14","portRaw":"30:71","processRaw":"7:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"},{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"8","process_destination":"2","port_source":"80","port_destination":"21","connection_class":"c-19","portRaw":"21:80","processRaw":"8:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"},{"process_source":"7","process_destination":"9","port_source":"72","port_destination":"90","connection_class":"c-14","portRaw":"90:72","processRaw":"7:9"},{"process_source":"5","process_destination":"10","port_source":"52","port_destination":"100","connection_class":"c-14","portRaw":"100:52","processRaw":"5:10"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-14T21:09:52.415Z"},{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":14,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":5,"x":512.434326171875,"y":424.19189453125,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":1,"x":240.98989868164062,"y":115.93920135498047,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":1160.9896240234375,"y":108.44450378417969,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":280,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"},{"index":30,"title":"record_date","description":"Name: record_date, Required: false,  Requires data: false, Type: datetime, Description: ","translateTop":0,"transform":"translate(0, 250)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":6,"x":670.090576171875,"y":678.54541015625,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Get datetime","inputs":[],"outputs":[{"index":60,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"getdate()"}},{"processId":7,"x":935.4545288085938,"y":666.5454711914062,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":71,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":72,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":8,"x":837.7271118164062,"y":54,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Create GUID","inputs":[],"outputs":[{"index":80,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}},{"processId":9,"x":1177.8182373046875,"y":690.2725830078125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":90,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":10,"x":743.6362915039062,"y":525.4545288085938,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":100,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}}],"connectionStrings":[{"process_source":"6","process_destination":"7","port_source":"60","port_destination":"70","connection_class":"c-14","portRaw":"70:60","processRaw":"6:7"},{"process_source":"7","process_destination":"2","port_source":"71","port_destination":"30","connection_class":"c-14","portRaw":"30:71","processRaw":"7:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"},{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"8","process_destination":"2","port_source":"80","port_destination":"21","connection_class":"c-19","portRaw":"21:80","processRaw":"8:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"},{"process_source":"7","process_destination":"9","port_source":"72","port_destination":"90","connection_class":"c-14","portRaw":"90:72","processRaw":"7:9"},{"process_source":"5","process_destination":"10","port_source":"52","port_destination":"100","connection_class":"c-14","portRaw":"100:52","processRaw":"5:10"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-15T08:44:50.999Z"},{"events":[],"versions":[],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":15,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":5,"x":512.434326171875,"y":424.19189453125,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":1,"x":240.98989868164062,"y":115.93920135498047,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":1160.9896240234375,"y":108.44450378417969,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":280,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"},{"index":30,"title":"record_date","description":"Name: record_date, Required: false,  Requires data: false, Type: datetime, Description: ","translateTop":0,"transform":"translate(0, 250)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":6,"x":670.090576171875,"y":678.54541015625,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Get datetime","inputs":[],"outputs":[{"index":60,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"getdate()"}},{"processId":7,"x":935.4545288085938,"y":666.5454711914062,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":71,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":72,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":8,"x":837.7271118164062,"y":54,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Create GUID","inputs":[],"outputs":[{"index":80,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}},{"processId":9,"x":1177.8182373046875,"y":690.2725830078125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":90,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":10,"x":743.6362915039062,"y":525.4545288085938,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":100,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}}],"connectionStrings":[{"process_source":"6","process_destination":"7","port_source":"60","port_destination":"70","connection_class":"c-14","portRaw":"70:60","processRaw":"6:7"},{"process_source":"7","process_destination":"2","port_source":"71","port_destination":"30","connection_class":"c-14","portRaw":"30:71","processRaw":"7:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"},{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"8","process_destination":"2","port_source":"80","port_destination":"21","connection_class":"c-19","portRaw":"21:80","processRaw":"8:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"},{"process_source":"7","process_destination":"9","port_source":"72","port_destination":"90","connection_class":"c-14","portRaw":"90:72","processRaw":"7:9"},{"process_source":"5","process_destination":"10","port_source":"52","port_destination":"100","connection_class":"c-14","portRaw":"100:52","processRaw":"5:10"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":"","versionDate":"2020-09-24T13:19:04.623Z"}],"_id":"5f5f719a9f8cfb3a8036076d","friendlyName":"CSV - MSSQL","connectorType":3,"connectorsSubType":null,"createAPI":true,"apiUrl":"csvtomssql","apiRequireAuth":false,"useAPIOverride":false,"expectedModel":[],"apiAction":"post","extrasettings":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null},"icon":"cloud_upload","rev":0,"__v":0,"flowsettings":{"flowType":"adapter","processes":[{"processId":5,"x":522.434326171875,"y":356.4140930175781,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":50,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":51,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":52,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":1,"x":232.1009979248047,"y":72.60590362548828,"type":"pipe_source","multiplier":10,"nextConnectionColorClass":"c-6","processMainColor":"#3498db","portHeight":25,"maxPortsContentHeight":305,"title":"Source SalesJan2009.csv","inputs":[],"outputs":[{"index":10,"title":"Transaction_date","description":"Name: Transaction_date, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":11,"title":"Product","description":"Name: Product, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 25)"},{"index":12,"title":"Price","description":"Name: Price, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 50)"},{"index":13,"title":"Payment_Type","description":"Name: Payment_Type, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 75)"},{"index":14,"title":"Name","description":"Name: Name, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 100)"},{"index":15,"title":"City","description":"Name: City, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 125)"},{"index":16,"title":"State","description":"Name: State, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 150)"},{"index":17,"title":"Country","description":"Name: Country, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 175)"},{"index":18,"title":"Account_Created","description":"Name: Account_Created, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 200)"},{"index":19,"title":"Last_Login","description":"Name: Last_Login, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 225)"},{"index":20,"title":"Latitude","description":"Name: Latitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 250)"},{"index":21,"title":"Longitude","description":"Name: Longitude, Required: false,  Requires data: false, Type: string, Description: ","translateTop":0,"transform":"translate(0, 275)"}],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","tip":""},{"name":"uniqid","type":"uniqueidentifier","tip":"","isRequired":true,"requiresContent":true},{"name":"product_name","type":"varchar","tip":"","isRequired":true,"requiresContent":true},{"name":"price","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"payment_type","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_name","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_city","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_state","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"customer_country","type":"nvarchar","tip":"","isRequired":true,"requiresContent":true},{"name":"purchase_date","type":"datetime","tip":"","isRequired":true,"requiresContent":true}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"ADDRECORD","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":2,"x":622.9998779296875,"y":231.0908966064453,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":20,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":21,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":22,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n        let payloadAsString = JSON.stringify(payload);\r\n        console.log('Payload as string', payloadAsString);\r\n\r\n        let values = ''\r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        await mssql.query(`insert into Transactions (uniqid, product_name) VALUES ('${payload.uniqid}, ${payload.product_name}')`)            \r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Done')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload, \"event\": \"temperaturVarsel\" };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":0,"__v":0}},{"processId":3,"x":923.6364135742188,"y":185.6363067626953,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":934.818115234375,"y":365,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}}],"connectionStrings":[{"process_source":"1","process_destination":"2","port_source":"10","port_destination":"20","connection_class":"c-5","portRaw":"20:10","processRaw":"1:2"},{"process_source":"2","process_destination":"3","port_source":"21","port_destination":"30","connection_class":"c-13","portRaw":"30:21","processRaw":"2:3"},{"process_source":"2","process_destination":"4","port_source":"22","port_destination":"40","connection_class":"c-13","portRaw":"40:22","processRaw":"2:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":true,"fieldsToDisplay":"all","containsSource":true}},{"processId":2,"x":1150.9896240234375,"y":71.77780151367188,"type":"pipe_destination","multiplier":10,"nextConnectionColorClass":"c-21","processMainColor":"#cf9c11","portHeight":25,"maxPortsContentHeight":280,"title":"Destination customer_purchases","inputs":[{"index":20,"title":"id","description":"Name: id, Required: false,  Requires data: false, Type: int, Description: ","translateTop":0,"transform":"translate(0, 0)"},{"index":21,"title":"uniqid","description":"Name: uniqid, Required: true,  Requires data: true, Type: uniqueidentifier, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 25)"},{"index":22,"title":"product_name","description":"Name: product_name, Required: true,  Requires data: true, Type: varchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 50)"},{"index":23,"title":"price","description":"Name: price, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 75)"},{"index":24,"title":"payment_type","description":"Name: payment_type, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 100)"},{"index":25,"title":"customer_name","description":"Name: customer_name, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 125)"},{"index":26,"title":"customer_city","description":"Name: customer_city, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 150)"},{"index":27,"title":"customer_state","description":"Name: customer_state, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 175)"},{"index":28,"title":"customer_country","description":"Name: customer_country, Required: true,  Requires data: true, Type: nvarchar, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 200)"},{"index":29,"title":"purchase_date","description":"Name: purchase_date, Required: true,  Requires data: true, Type: datetime, Description: ","displayRequiredIcon":true,"displayRequireDataIcon":true,"translateTop":0,"transform":"translate(0, 225)"},{"index":30,"title":"record_date","description":"Name: record_date, Required: false,  Requires data: false, Type: datetime, Description: ","translateTop":0,"transform":"translate(0, 250)"}],"outputs":[],"processContainer":{"categoryMemberships":[{"_id":"5f51e4cd5e06a5399c785a06","name":"Testing","__v":0}],"dsSource":"5f5f4e88efbef727980384de","dsDestinationAction":1,"dsDestinationModel":{"name":"customer_purchases","columns":[{"name":"id","type":"int","isRequired":false,"requiresContent":false,"tip":""},{"name":"uniqid","type":"uniqueidentifier","isRequired":true,"requiresContent":true,"tip":""},{"name":"product_name","type":"varchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"price","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"payment_type","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_name","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_city","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_state","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"customer_country","type":"nvarchar","isRequired":true,"requiresContent":true,"tip":""},{"name":"purchase_date","type":"datetime","isRequired":true,"requiresContent":true,"tip":""},{"name":"record_date","type":"datetime","isRequired":false,"requiresContent":false,"tip":""}],"flow":{"name":"customer_purchases","description":"Datasource table flow"},"flowsettings":{"flowType":"datasourceflow","processes":[{"processId":1,"x":172.727294921875,"y":191.18179321289062,"type":"event","multiplier":10,"nextConnectionColorClass":"c-5","processMainColor":"#0668be","portHeight":25,"maxPortsContentHeight":30,"title":"Add a new record","inputs":[],"outputs":[{"index":10,"title":"Output","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"name":"ADDRECORD","method":"ADDRECORD","compatibleWith":9002,"enabled":false}},{"processId":3,"x":1071.818115234375,"y":99.27269744873047,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-10","processMainColor":"#2ecc71","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":30,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":4,"x":1068.4544677734375,"y":282.2727966308594,"type":"nonapiresponse","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"Response","inputs":[{"index":40,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"responseMessage":"input_data"}},{"processId":6,"x":470.9999084472656,"y":292.09100341796875,"type":"verifydata","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"is TestBase(customer_purchases)","inputs":[{"index":60,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":61,"title":"Match","translateTop":0,"transform":"translate(0, 0)"},{"index":62,"title":"No match","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"checkAgainst":"datasource","datasourceID":"5f5f6ca85909122c7c1aacb5","datasourceTable":"customer_purchases"}},{"processId":7,"x":758.6362915039062,"y":473.90899658203125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":8,"x":749.9091796875,"y":213.18179321289062,"type":"action","multiplier":10,"nextConnectionColorClass":"c-13","processMainColor":"#F69201","portHeight":25,"maxPortsContentHeight":55,"title":"Add new record to SQL","inputs":[{"index":80,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":81,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":82,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add record to SQL","description":"Add a new record to an SQL server. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n   \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Before \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"ispush\": true, \"data\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":3,"__v":0,"versionDate":"2020-09-14T15:19:50.041Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into customer_purchases (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]}]},"rev":4,"__v":0,"versionDate":"2020-09-14T15:30:29.604Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n        // await mssql.query(`insert into Transactions (uniqid, product_name,price,payment_type,customer_name,customer_city,customer_state,customer_country,purchase_date) VALUES ('\r\n        // ${payload.uniqid}\r\n        // ')`)        \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003],"isaddedToIntellisens":true},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003],"isaddedToIntellisens":true}]},"rev":5,"__v":0,"versionDate":"2020-09-14T15:37:35.913Z"},{"dependencies":[{"name":"mssql","canberemoved":true}],"custommethodParams":[],"requiredFields":[],"supportedBy":[{"value":9002,"text":"Datasource MSSQL"}],"versions":[],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to our sql","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        \r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":6,"__v":0,"versionDate":"2020-09-14T15:38:31.982Z"}],"_id":"5f5f71189f8cfb3a8036076a","name":"Add new record to SQL","description":"Add a new record to the datasource MSSQL table that the flow this is used in belongs to. ","useinternalmethod":false,"custommethod":"const mssql = require('mssql');\r\n\r\nlet mssqlUri = $dsUri$;\r\nlet mssqlUname = $dsUsername$;\r\nlet mssqlPassword = $dsPassword$;\r\nlet mssqlDatabase = $dsDatabase$;\r\n\r\n async function recordTransaction () {\r\n    try {\r\n\r\n        let fields = Object.keys(payload).join();\r\n        let values = Object.values(payload);\r\n        for (let index = 0; index < values.length; index++) {\r\n            const element = values[index];\r\n            values[index] = `'${element}'`\r\n     \r\n        }        \r\n        await mssql.close();\r\n        await mssql.connect(`mssql://${mssqlUname}:${mssqlPassword}@${mssqlUri}/${mssqlDatabase}`)\r\n        let query = `insert into ${$dsTable$} (${fields}) VALUES (${values})`\r\n        await mssql.query(query);\r\n        await mssql.close();\r\n      \r\n        console.log('Record added')\r\n    } catch (err) {\r\n        console.log(\"Error adding record to sql \", err.message); \r\n    }\r\n}\r\n\r\n await recordTransaction();\r\n  return { \"Added\": true, \"message\": \"Added to SQL\", \"what\": payload };\r\n","methodreturnType":"false","enabled":false,"method":"blank","methodresultaction":"nothing","outputs":{"isMatch":{"actions":[]},"noMatch":{"actions":[]}},"containsDefaultData":false,"extrasettings":{"nextAction":"next","dataToReturn":"currentaction","categoryMemberships":[{"name":"SQL","_id":"5f5f6ed19f8cfb3a80360769"}],"excludeFromEventLog":false,"staticparams":[{"name":"payload","tooltip":"The incoming data that the adapter receives","supports":[0,1,2,3,9000,9001,9002,9003]},{"name":"$dsUri$","tooltip":"This will be replaced with the server URI defined in the datasource","supports":[9002,9003]},{"name":"$dsUsername$","tooltip":"This will be replaced with the server username defined in the datasource","supports":[9002,9003]},{"name":"$dsPassword$","tooltip":"This will be replaced with the server password defined in the datasource","supports":[9002,9003]},{"name":"$dsDatabase$","tooltip":"This will be replaced with the server database defined in the datasource","supports":[9002,9003]},{"name":"$dsTable$","tooltip":"This will be replaced with the server table defined in the datasource","supports":[9002,9003]}]},"rev":0,"__v":0,"versionDate":null}}],"connectionStrings":[{"process_source":"1","process_destination":"6","port_source":"10","port_destination":"60","connection_class":"c-5","portRaw":"60:10","processRaw":"1:6"},{"process_source":"6","process_destination":"7","port_source":"62","port_destination":"70","connection_class":"c-14","portRaw":"70:62","processRaw":"6:7"},{"process_source":"6","process_destination":"8","port_source":"61","port_destination":"80","connection_class":"c-14","portRaw":"80:61","processRaw":"6:8"},{"process_source":"8","process_destination":"3","port_source":"81","port_destination":"30","connection_class":"c-13","portRaw":"30:81","processRaw":"8:3"},{"process_source":"8","process_destination":"4","port_source":"82","port_destination":"40","connection_class":"c-13","portRaw":"40:82","processRaw":"8:4"}],"flowid":"5f5f6ca85909122c7c1aacb5"}},"dsSourceTable":"SalesJan2009.csv","dsSourceModel":{"name":"SalesJan2009.csv","columns":[{"name":"Transaction_date","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Product","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Price","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Payment_Type","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Name","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"City","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"State","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Country","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Account_Created","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Last_Login","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Latitude","type":"string","tip":"","isRequired":false,"requiresContent":false},{"name":"Longitude","type":"string","tip":"","isRequired":false,"requiresContent":false}]},"dsDestination":"5f5f6ca85909122c7c1aacb5","dsDestinationTable":"customer_purchases","rootlevel":"topLevel","payloadAction":"forwardall","rootLevelPath":null,"isPipe":true,"isSource":false,"fieldsToDisplay":"all","containsDestination":true}},{"processId":6,"x":562.3128051757812,"y":680.767578125,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Get datetime","inputs":[],"outputs":[{"index":60,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"getdate()"}},{"processId":7,"x":852.1212158203125,"y":674.3233032226562,"type":"convert","multiplier":10,"nextConnectionColorClass":"c-14","processMainColor":"#d35400","portHeight":25,"maxPortsContentHeight":55,"title":"Convert date","inputs":[{"index":70,"title":"Input","translateTop":0,"transform":"translate(0, 12.5)"}],"outputs":[{"index":71,"title":"Result","translateTop":0,"transform":"translate(0, 0)"},{"index":72,"title":"Error","translateTop":0,"transform":"translate(0, 25)"}],"processContainer":{"convertTo":"date","covnertToType":"yyyy/mm/dd","includeTime":true}},{"processId":8,"x":793.28271484375,"y":39.555599212646484,"type":"pipe_customvalue","multiplier":10,"nextConnectionColorClass":"c-19","processMainColor":"#34495e","portHeight":25,"maxPortsContentHeight":30,"title":"Create GUID","inputs":[],"outputs":[{"index":80,"title":"Result","translateTop":0,"transform":"translate(0, 0)"}],"processContainer":{"valueType":"generate","valueTypeBind":"newid()"}},{"processId":9,"x":1177.8182373046875,"y":690.2725830078125,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":90,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}},{"processId":10,"x":743.6362915039062,"y":525.4545288085938,"type":"stopflow","multiplier":10,"nextConnectionColorClass":"c-1","processMainColor":"#c0392b","portHeight":25,"maxPortsContentHeight":30,"title":"STOP","inputs":[{"index":100,"title":"Input","translateTop":0,"transform":"translate(0, 0)"}],"outputs":[],"processContainer":{"dataToForward":"no_data"}}],"connectionStrings":[{"process_source":"6","process_destination":"7","port_source":"60","port_destination":"70","connection_class":"c-14","portRaw":"70:60","processRaw":"6:7"},{"process_source":"7","process_destination":"2","port_source":"71","port_destination":"30","connection_class":"c-14","portRaw":"30:71","processRaw":"7:2"},{"process_source":"1","process_destination":"5","port_source":"10","port_destination":"50","connection_class":"c-6","portRaw":"50:10","processRaw":"1:5"},{"process_source":"5","process_destination":"2","port_source":"51","port_destination":"29","connection_class":"c-14","portRaw":"29:51","processRaw":"5:2"},{"process_source":"1","process_destination":"2","port_source":"11","port_destination":"22","connection_class":"c-6","portRaw":"22:11","processRaw":"1:2"},{"process_source":"8","process_destination":"2","port_source":"80","port_destination":"21","connection_class":"c-19","portRaw":"21:80","processRaw":"8:2"},{"process_source":"1","process_destination":"2","port_source":"12","port_destination":"23","connection_class":"c-6","portRaw":"23:12","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"13","port_destination":"24","connection_class":"c-6","portRaw":"24:13","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"14","port_destination":"25","connection_class":"c-6","portRaw":"25:14","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"15","port_destination":"26","connection_class":"c-6","portRaw":"26:15","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"16","port_destination":"27","connection_class":"c-6","portRaw":"27:16","processRaw":"1:2"},{"process_source":"1","process_destination":"2","port_source":"17","port_destination":"28","connection_class":"c-6","portRaw":"28:17","processRaw":"1:2"},{"process_source":"7","process_destination":"9","port_source":"72","port_destination":"90","connection_class":"c-14","portRaw":"90:72","processRaw":"7:9"},{"process_source":"5","process_destination":"10","port_source":"52","port_destination":"100","connection_class":"c-14","portRaw":"100:52","processRaw":"5:10"}],"flowid":"5f5f719a9f8cfb3a8036076d"},"expectedModelString":""}